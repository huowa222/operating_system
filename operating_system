
在操作系统中，程序运行的时候，其本身是没有权利访问多少系统资源的，这是为了避免系统有限的资源可能被多个应用同时访问。为了让程序有能力访问系统资源，也为了让程序借助操作系统做一些必须由操作系统支持的行为，每个操作系统都会提供一套接口，供应用程序调用，这些接口通常通过中断来实现。

现代操作系统中，CPU可以在多种不同的特权级别下执行指令，通常有用户模式与内核模式，也被称为 用户态与内核态。应用程序基本都是运行在用户态的，而系统调用则是运行在内核态，一般操作系统通过中断来从用户态切换到内核态，但内核态是可以直接切换到用户态的。

中断：一个硬件或软件发出的请求，要求CPU暂停当前的工作转手取处理更加重要的事情。中断有两个属性：中断号与中断处理程序。不同的中断号对应不同的中断处理程序，在内核中，存在一个数组称为中断向量表，该表中第n项对应第n号中断号相应的中断处理程序的指针。当中断来临时，CPU会暂停当前执行的代码，根据中断的中断号，在中断向量表中找到对应的中断处理程序，并调用它。

在LINUX中，进程由用户态切换到内核态时，需要切换栈，内核态与用户态使用不同的栈，两者互不干扰，互不相关，且每个进程都有自己的内核栈。在系统调用完成后，则进行栈切换，从内核栈切换回用户栈，回到用户态。
--------------------- 
作者：Virtual_Func 
来源：CSDN 
原文：https://blog.csdn.net/Virtual_Func/article/details/49454801 
版权声明：本文为博主原创文章，转载请附上博文链接！
